# -*- coding: utf-8 -*-
"""Sentiment Analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1p85LYy6AJikQ7bTE1yXNKGw8320JXVpw
"""

from google.colab import drive
drive.mount('/content/drive')

import pandas as pd
import matplotlib.pyplot as plt
import nltk
nltk.download('stopwords')
from nltk.corpus import stopwords

path = "/content/drive/MyDrive/IMDB_Dataset.csv"
df = pd.read_csv(path)

df.head()

df['sentiment'].value_counts()

df.info()

def clean_review(review):
  str = ''.join(word for word in review.split() if word.lower() not in stopwords.words('english'))
  return str

df['review'] = df['review'].apply(clean_review)

from wordcloud import WordCloud

reviews = ''.join(word for word in df['review'][df['sentiment'] == 'negative'].astype(str))
wordcloud = WordCloud(height=600, width=1000, max_font_size=200)
plt.figure(figsize=(15,12))
plt.imshow(wordcloud.generate(reviews), interpolation='bilinear')
plt.axis('off')
plt.show()

reviews = ''.join(word for word in df['review'][df['sentiment']=='positive'].astype(str))
wordcloud = WordCloud(height=600, width= 1000, max_font_size=100)
plt.figure(figsize=(15,12))
plt.imshow(wordcloud.generate(reviews), interpolation='bilinear')
plt.axis('off')
plt.show()

from sklearn.feature_extraction.text import TfidfVectorizer
cv = TfidfVectorizer(max_features=2500)

reviews = cv.fit_transform(df['review']).toarray()

sentiments = df['sentiment'].replace(['positive', 'negative'], [1,0])

sentiments.value_counts()

from sklearn.linear_model import LogisticRegression

model = LogisticRegression()

from sklearn.model_selection import train_test_split
reviews_train, reviews_test, sent_train, sent_test = train_test_split(reviews, sentiments, test_size=0.2)

model.fit(reviews_train, sent_train)

predict = model.predict(reviews_test)

from sklearn.metrics import confusion_matrix, ConfusionMatrixDisplay
cm = confusion_matrix(sent_test, predict)
display = ConfusionMatrixDisplay(cm, display_labels=model.classes_)
display.plot()
plt.show()

import pickle as pk

pk.dump(model, open('model.pkl', 'wb'))

pk.dump(cv, open('scaler.pkl', 'wb'))

from google.colab import files
files.download('model.pkl')

files.download('scaler.pkl')